<data-definition>
    <enum-type type-name='ui_advmode_menu'> bay12: AdventureViewModes
        <enum-item name='Default' value='0'/> MAIN
        <enum-item name='Look'/>
        <enum-item name='ConversationAddress'/> CONVERSATION_START_NEW
        <enum-item name='ConversationSelect'/> CONVERSATION_LIST
        <enum-item name='ConversationSpeak'/> CONVERATION_TALK
        5
        <enum-item name='Inventory'/>
        <enum-item name='Drop'/>
        <enum-item name='ThrowItem'/>
        <enum-item name='Wear'/>
        <enum-item name='Remove'/>
        10
        <enum-item name='Interact'/>
        <enum-item name='Put'/>
        <enum-item name='PutContainer'/>
        <enum-item name='Eat'/>
        <enum-item name='ThrowAim'/>
        15
        <enum-item name='Fire'/>
        <enum-item name='Get'/>
        <enum-item name='GetAmount'/> PICKUP_AMOUNT
        <enum-item name='CombatPrefs'/>
        <enum-item name='Companions'/>
        20
        <enum-item name='MovementPrefs'/>
        <enum-item name='SpeedPrefs'/> SPEED_SNEAK
        <enum-item name='InteractAction'/>
        <enum-item name='MoveCarefully'/>
        <enum-item name='Announcements'/>
        25
        <enum-item name='UseBuilding' comment='Interacting with a lever or a statue, for example'/>
        <enum-item name='Travel'/>
        <enum-item name='TravelSleep'/>
        <enum-item name='ViewFreshestTrack' comment='A_FRESHEST_TRACK'/>
        <enum-item name='SleepConfirm'/>
        30
        <enum-item name='SelectInteractionTarget'/>
        <enum-item name='InteractChoices' comment='For example, after inputting A_BUILDING while standing on the same tile as a lever and a minecart'/>
        <enum-item name='InteractVehicle' comment='Interacting with a minecart'/>
        <enum-item name='FallAction'/>
        <enum-item name='ViewTracks'/>
        35
        <enum-item name='Jump'/>
        <enum-item name='AttackCreature'/> ATTACKCREATURE_UNIT_CHOICE
        <enum-item name='AttackConfirm'/> ATTACKCREATURE_CONFIRM
        <enum-item name='AttackType'/> ATTACKCREATURE_MOVE_CHOICE
        <enum-item name='AttackBodypart'/> ATTACKCREATURE_AIM_TARGET
        40
        <enum-item name='AttackStrike'/> ATTACKCREATURE_AIM_ATTACK
        <enum-item name='DefendParry'/> ATTACKCREATURE_PARRY_CHOICE
        <enum-item name='DefendBlock'/> ATTACKCREATURE_BLOCK_CHOICE
        <enum-item name='DodgeDirection'/> ATTACKCREATURE_DODGE_CHOICE
        <enum-item name='PerformanceSelect'/> START_PERFORMANCE
        45
        <enum-item name='InterruptPerformanceConfirm'/> MOVE_CONFIRM
        <enum-item name='Build'/>
        <enum-item name='AssumeIdentity'/>
        <enum-item name='NameItem'/>
        <enum-item name='BecomePartyMember'/>
        50
        <enum-item name='PartyTacticalSettings'/>
    </enum-type>

    <enum-type type-name='talk_choice_type' base-type='int32_t'> bay12: ConversationChoiceType
        0
        <enum-item name='Greet'/>
        <enum-item name='Nevermind'/>
        <enum-item name='Trade'/>
        <enum-item name='AskJoin'/>
        <enum-item name='AskSurroundings'/>
        <enum-item name='SayGoodbye'/>
        <enum-item name='AskStructure'/>
        <enum-item name='AskFamily'/>
        <enum-item name='AskProfession'/>
        <enum-item name='AskPermissionSleep'/>
        10
        <enum-item name='AccuseNightCreature'/>
        <enum-item name='AskTroubles'/>
        <enum-item name='BringUpEvent'/>
        <enum-item name='SpreadRumor'/>
        <enum-item name='ReplyGreeting'/>
        <enum-item name='RefuseConversation'/>
        <enum-item name='ReplyImpersonate'/>
        <enum-item name='BringUpIncident'/>
        <enum-item name='TellNothingChanged'/>
        <enum-item name='GoodbyeReply'/>
        20
        <enum-item name='ReturnTopic'/>
        <enum-item name='ChangeSubject'/>
        <enum-item name='AskTargetAction'/>
        <enum-item name='RequestSuggestAction'/>
        <enum-item name='AskJoinInsurrection'/>
        <enum-item name='AskJoinRescue'/>
        <enum-item name='StateOpinion'/>
        <enum-item name='RespondJoinInsurrection'/>
        <enum-item name='GeneralCompanionReaffirm'/>
        <enum-item name='AllowPermissionSleep'/>
        30
        <enum-item name='DenyPermissionSleep'/>
        <enum-item name='SleepInterrupt'/>
        <enum-item name='AskJoinAdventure'/>
        <enum-item name='AskGuideLocation'/>
        <enum-item name='RespondJoinAdventure'/>
        <enum-item name='RespondJoinGuide'/>
        <enum-item name='OfferCondolences'/>
        <enum-item name='StateNotAcquainted'/>
        <enum-item name='SuggestTravel'/>
        <enum-item name='SuggestTalk'/>
        40
        <enum-item name='RequestSelfRescue'/>
        <enum-item name='AskWhatHappened'/>
        <enum-item name='JoinBeRescued'/>
        <enum-item name='SayNotRemember'/>
        <enum-item name='RespondJoinRescue'/>
        <enum-item name='SayNoFamily'/>
        <enum-item name='StateUnitLocation'/>
        <enum-item name='ReferToElder'/>
        <enum-item name='AskComeCloser'/>
        <enum-item name='DoBusiness'/>
        50
        <enum-item name='AskComeStoreLater'/>
        <enum-item name='AskComeMarketLater'/>
        <enum-item name='TellTryShopkeeper'/>
        <enum-item name='DescribeSurroundings'/>
        <enum-item name='AskWaitUntilHome'/>
        <enum-item name='DescribeFamily'/>
        <enum-item name='StateAge'/>
        <enum-item name='DescribeProfession'/>
        <enum-item name='AnnounceNightCreature'/>
        <enum-item name='StateIncredulity'/>
        60
        <enum-item name='BypassGreeting'/>
        <enum-item name='AskCeaseHostilities'/>
        <enum-item name='DemandYield'/>
        <enum-item name='HawkWares'/>
        <enum-item name='YieldTerror'/>
        <enum-item name='Yield'/>
        <enum-item name='ExpressOverwhelmingEmotion'/>
        <enum-item name='ExpressGreatEmotion'/>
        <enum-item name='ExpressEmotion'/>
        <enum-item name='ExpressMinorEmotion'/>
        70
        <enum-item name='ExpressLackEmotion'/>
        <enum-item name='OutburstFleeConflict'/>
        <enum-item name='StateFleeConflict'/>
        <enum-item name='MentionJourney'/>
        <enum-item name='SummarizeTroubles'/>
        <enum-item name='AskAboutIncident'/>
        <enum-item name='AskDirectionsPerson'/>
        <enum-item name='AskDirectionsPlace'/>
        <enum-item name='AskWhereabouts'/>
        <enum-item name='RequestGuideSite'/>
        80
        <enum-item name='RequestGuideHistfig'/>
        <enum-item name='ProvideDirections'/>
        <enum-item name='ProvideWhereabouts'/>
        <enum-item name='TellTargetSelf'/>
        <enum-item name='TellTargetDead'/>
        <enum-item name='RecommendGuide'/>
        <enum-item name='ProfessIgnorance'/>
        <enum-item name='TellAboutPlace'/>
        <enum-item name='AskFavorMenu'/>
        <enum-item name='AskWait'/>
        90
        <enum-item name='AskFollow'/>
        <enum-item name='ApologizeBusy'/>
        <enum-item name='ComplyOrder'/>
        <enum-item name='AgreeFollow'/>
        <enum-item name='ExchangeItems'/>
        <enum-item name='BarterAskComeCloser'/>
        <enum-item name='InitiateBarter'/>
        <enum-item name='AgreeCeaseHostile'/>
        <enum-item name='RefuseCeaseHostileArena'/>
        <enum-item name='RefuseCeaseHostile'/>
        100
        <enum-item name='RefuseYieldArena'/>
        <enum-item name='RefuseYield'/>
        <enum-item name='Brag'/>
        <enum-item name='DescribeRelation'/>
        <enum-item name='ClaimSite'/>
        <enum-item name='AnnounceLairHunt'/>
        <enum-item name='RequestDuty'/>
        <enum-item name='AskJoinService'/>
        <enum-item name='AcceptService'/>
        <enum-item name='TellRemainVigilant'/>
        110
        <enum-item name='GiveServiceOrder'/>
        <enum-item name='WelcomeSelfHome'/>
        <enum-item name='RespondJoinForRescue'/>
        <enum-item name='AskTravelReason'/>
        <enum-item name='TellTravelReason'/>
        <enum-item name='AskLocalRuler'/>
        <enum-item name='ComplainAgreement'/>
        <enum-item name='CancelAgreement'/>
        <enum-item name='SummarizeConflict'/>
        <enum-item name='SummarizeViews'/>
        120
        <enum-item name='AskClaimStrength'/>
        <enum-item name='AskArmyPosition'/>
        <enum-item name='AskOtherClaims'/>
        <enum-item name='AskDeserters'/>
        <enum-item name='AskSiteNeighbors'/>
        <enum-item name='DescribeSiteNeighbors'/>
        <enum-item name='RaiseAlarm'/>
        <enum-item name='DemandDropWeapon'/>
        <enum-item name='AgreeComplyDemand'/>
        <enum-item name='RefuseComplyDemand'/>
        130
        <enum-item name='AskLocationObject'/>
        <enum-item name='DemandTribute'/>
        <enum-item name='AgreeGiveTribute'/>
        <enum-item name='RefuseGiveTribute'/>
        <enum-item name='OfferGiveTribute'/>
        <enum-item name='AgreeAcceptTribute'/>
        <enum-item name='RefuseAcceptTribute'/>
        <enum-item name='CancelTribute'/>
        <enum-item name='OfferPeace'/>
        <enum-item name='AgreePeace'/>
        140
        <enum-item name='RefusePeace'/>
        <enum-item name='AskTradeDepotLater'/>
        <enum-item name='ExpressAstonishment'/>
        <enum-item name='CommentWeather'/>
        <enum-item name='CommentNature'/>
        <enum-item name='SummarizeTerritory'/>
        <enum-item name='SummarizePatrols'/>
        <enum-item name='SummarizeOpposition'/>
        <enum-item name='DescribeRefugees'/>
        <enum-item name='AccuseTroublemaker'/>
        150
        <enum-item name='AskAdopt'/>
        <enum-item name='AgreeAdopt'/>
        <enum-item name='RefuseAdopt'/>
        <enum-item name='RevokeService'/>
        <enum-item name='InviteService'/>
        <enum-item name='AcceptInviteService'/>
        <enum-item name='RefuseShareInformation'/>
        <enum-item name='RefuseInviteService'/>
        <enum-item name='RefuseRequestService'/>
        <enum-item name='OfferService'/>
        160
        <enum-item name='AcceptPositionService'/>
        <enum-item name='RefusePositionService'/>
        <enum-item name='InvokeNameBanish'/>
        <enum-item name='InvokeNameService'/>
        <enum-item name='GrovelMaster'/>
        <enum-item name='DemandItem'/>
        <enum-item name='GiveServiceReport'/>
        <enum-item name='OfferEncouragement'/>
        <enum-item name='PraiseTaskCompleter'/>
        <enum-item name='AskAboutPersonMenu'/>
        170
        <enum-item name='AskAboutPerson'/>
        <enum-item name='TellAboutPerson'/>
        <enum-item name='AskFeelings'/>
        <enum-item name='TellThoughts'/>
        <enum-item name='AskServices'/>
        <enum-item name='TellServices'/>
        <enum-item name='OrderDrink'/>
        <enum-item name='RentRoom'/>
        <enum-item name='ExtendRoomRental'/>
        <enum-item name='ConfirmServiceOrder'/>
        180
        <enum-item name='AskJoinEntertain'/>
        <enum-item name='RespondJoinEntertain'/>
        <enum-item name='AskJoinTroupe'/>
        <enum-item name='AcceptIntoTroupe'/>
        <enum-item name='RefuseTroupeApplication'/>
        <enum-item name='InviteJoinTroupe'/>
        <enum-item name='AcceptTroupeInvitation'/>
        <enum-item name='RefuseTroupeInvitation'/>
        <enum-item name='KickOutOfTroupe'/>
        <enum-item name='CreateTroupe'/>
        190
        <enum-item name='LeaveTroupe'/>
        <enum-item name='YellServiceOrder'/>
        <enum-item name='TellBePatientForService'/>
        <enum-item name='TellNoServices'/>
        <enum-item name='AskWaitUntilThere'/>
        <enum-item name='DenyWorkingHere'/>
        <enum-item name='ExpressEmotionMenu'/>
        <enum-item name='StateValueMenu'/>
        <enum-item name='StateValue'/>
        <enum-item name='SayNoOrderYet'/>
        200
        <enum-item name='ProvideDirectionsBuilding'/>
        <enum-item name='Argue'/>
        <enum-item name='FlatterArgument'/>
        <enum-item name='DismissArgument'/>
        <enum-item name='RespondPassively'/>
        <enum-item name='Acquiesce'/>
        <enum-item name='DerideFlattery'/>
        <enum-item name='ExpressOutrageAtDismissal'/>
        <enum-item name='PressArgument'/>
        <enum-item name='DropArgument'/>
        210
        <enum-item name='AskWork'/>
        <enum-item name='AskWorkGroup'/>
        <enum-item name='GrantWork'/>
        <enum-item name='RefuseWork'/>
        <enum-item name='GrantWorkGroup'/>
        <enum-item name='RefuseWorkGroup'/>
        <enum-item name='GiveSquadOrder'/>
        <enum-item name='Artifact'/>
        <enum-item name='PraiseReturn'/>
        <enum-item name='ProvideLocation'/>
        220
        <enum-item name='Prophesize'/>
        <enum-item name='TalkAboutAncestor'/>
        <enum-item name='SuggestTrade'/>
        <enum-item name='AcceptNotTrade'/>
        <enum-item name='DemandIdentity'/>
        <enum-item name='Interrogate'/>
        <enum-item name='FishForMaster'/>
        <enum-item name='FishForPlots'/>
        <enum-item name='GiveUpRandomMaster'/>
        <enum-item name='GiveUpRandomPlot'/>
        230
        <enum-item name='RefuseInterrogation'/>
        <enum-item name='Flatter'/>
        <enum-item name='Pacify'/>
        <enum-item name='TellJoke'/>
        <enum-item name='DerideCalming'/>
        <enum-item name='AcceptCompliment'/>
        <enum-item name='AcceptCalming'/>
        <enum-item name='DidNotNeedCalming'/>
        <enum-item name='ApproveJoke'/>
        <enum-item name='RejectJoke'/>
        240
        <enum-item name='ImpatientGoodbye'/>
        <enum-item name='RejectCompliment'/>
        <enum-item name='RejectCalming'/>
        <enum-item name='MockRepeatedPersuadeFailure'/>
        <enum-item name='MockRepeatedIntimidateFailure'/>
        <enum-item name='NamePet'/>
        <enum-item name='GiftAPet'/>
        <enum-item name='GiftSpecificPet'/>
        <enum-item name='HorrifiedByPetGift'/>
        <enum-item name='ThankForPetGift'/>
    </enum-type>

    <enum-type type-name='assume_identity_mode' base-type='int32_t'> bay12: AssumeIdentityMenuModeType
        <enum-item name='SelectIdentity'/>
        <enum-item name='CreateIdentity'/>
        <enum-item name='SelectProfession'/>
        <enum-item name='SelectWorship'/>
        <enum-item name='SelectOrigin'/>
    </enum-type>

    <struct-type type-name='talk_choice' original-name='conversation_choicest'>
        <enum name='type' type-name='talk_choice_type'/>
        <pointer name='rumor' type-name='entity_event'/>
        <pointer name='witness_incident' type-name='witness_incidentst'/>
        <pointer name='var1' comment='gigantic union with a pointer inside'/> TODO
        <int32_t name='var2' comment='gigantic union'/>
        <int32_t name='var3' comment='gigantic union'/>
        <int32_t name='var4' comment='gigantic union'/>
        <int32_t name='value' init-value='-1'/>
    </struct-type>

    <struct-type type-name='adventure_workingst'>
        <enum base-type='int32_t' name='type'> bay12: AdventureWorkType
            <enum-item name='NONE' value='-1'/>
            <enum-item name='CHOP_TREE'/>
            <enum-item name='BUILD_SITE'/>
        </enum>
        <int32_t name='abs_x'/>
        <int32_t name='abs_y'/>
        <int32_t name='abs_z'/>
        <pointer name='target_site' type-name='world_site'/>
    </struct-type>

    <struct-type type-name='adventure_rumor_datast'>
        <compound name='rumor' type-name='entity_event'/>

        <bitfield name='flags' base-type='uint32_t'> bay12: ADVENTURE_RUMOR_DATA_FLAG_*
            <flag-bit name='priority'/>
            <flag-bit name='starting_rumor'/>
        </bitfield>

        <int32_t name='last_told_visual_hfid'/>
        <int32_t name='last_told_year'/>
        <int32_t name='last_told_season_count'/>
        <int32_t name='last_told_click_per_click'/>
        <int32_t name='last_told_abs_tile_x'/>
        <int32_t name='last_told_abs_tile_y'/>
        <int32_t name='last_told_abs_tile_z'/>

        <int32_t name='first_told_visual_hfid'/>
        <int32_t name='first_told_year'/>
        <int32_t name='first_told_season_count'/>
        <int32_t name='first_told_click_per_click'/>
        <int32_t name='first_told_abs_tile_x'/>
        <int32_t name='first_told_abs_tile_y'/>
        <int32_t name='first_told_abs_tile_z'/>
    </struct-type>

    <enum-type type-name='adventure_construction_mode_type' base-type='int32_t'> bay12: AdventureConstructionModeType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='CONSTRUCTION'/>
        <enum-item name='MATERIAL'/>
        <enum-item name='BUILDING'/>
        <enum-item name='ZONE_LIST'/>
        <enum-item name='ZONE_NEW_EDIT'/>
        <enum-item name='ZONE_ASSIGN'/>
        <enum-item name='ZONE_LOCATION'/>
    </enum-type>

    <struct-type type-name='adventurest'>
        <enum base-type='int16_t' name='menu' type-name='ui_advmode_menu'/>

        <int8_t name='site_level_zoom' comment='bay12: viewmode; when set, the travel map is zoomed in to show site details'/>
        <int32_t name='travel_origin_x' comment='bay12: local_apparent_abs_smm_x'/>
        <int32_t name='travel_origin_y' comment='bay12: local_apparent_abs_smm_y'/>  Coordinates of the player on the map when the travel screen is opened. Determine the displayed position whilst travel_not_moved is set
        <int32_t name='travel_origin_z' comment='bay12: local_apparent_layer_depth'/>
        <int8_t name='travel_clouds'/>
        <enum base-type='int8_t' name='travel_right_map' comment='bay12: traveL_map; is an int8_t'>
            <enum-item name='MapNone'/>
            <enum-item name='MapSite'/>
            <enum-item name='MapWorld'/>
        </enum>
        <enum base-type='int8_t' name='show_menu' init-value='TwoRowsWithKeybindingHints' comment='bay12: travel_instructions; is an int8_t; bottom menu in travel mode'>
            <enum-item name='TwoBlankRows' value='-1'/>
            <enum-item name='Hidden'/>
            <enum-item name='TwoRowsWithKeybindingHints'/>
            <enum-item name='TwoRows'/>
            <enum-item name='OneRow'/>
        </enum>
        <stl-string name='message' comment='bay12: travel_exception; you must move from surrounding obstacles'/>
        <int16_t name='message_color' comment='bay12: travel_exception_color'/>
        <int8_t name='message_brightness' comment='bay12: travel_exception_bright'/>

        <bool name='travel_not_moved' comment='bay12: still_local'/>
        <int8_t name='local_sleep_origination'/>

        <compound name='local_working' type-name='adventure_workingst'/>

        <enum name='local_composing_writing_form' type-name='written_content_type'/>
        <int32_t name='local_composing_writing_form_id'/>
        <int32_t name='local_write_target_itid'/>
        <enum name='local_write_writing_form' type-name='written_content_type'/>
        <int32_t name='local_write_wcid'/>

        <int8_t name='offload_timer' comment='bay12: offloading_site; Set to 10 when actions which offload the map are undertaken, such as sleeping and making the first fast travel movement. Decreases by 1 each frame thereafter until it reaches 0. Forcing a constant value above 0 prevents progression of the action beyond the Offloading Map message.'/>

        <int32_t name='tick_counter' comment='bay12: click_per_click; goes up to XXX'/>
        <int32_t name='frame_counter' comment='bay12: transient_phase; goes up to 10000 (ticks?)'/>
        <int16_t name='last_hour' comment='Appears to increment by 2 every 144 advmode ticks.'/>

        <int8_t name='sleeping'/>
        <int8_t name='sleep_interrupt'/>

        <int32_t name='bogeymen_ambush_size' comment='bay12: bogeymen_number; Setting this to a number greater than 0 causes a bogeyman ambush to begin, spawning the specified number of bogeymen around the adventurer. Normally initialized to 4-7 when the cackling starts.'/>
        <int32_t name='bogeymen_killed' comment='bay12: bogeymen_killed_this_attack; Keeps track of the number of bogeymen killed during a bogeyman ambush. The cackling ends when this is equal to bogeymen_ambush_size.'/>
        <int32_t name='bogeymen_ambush_delay' comment='bay12: bogeymen_season_timer; Initialized to 60 when the cackling starts, preventing later bogeyman ambushes until it decreases to 0.'/>

        <int32_t name='fake_ambush_timer'/>

        <stl-vector type-name='int32_t' name='searched_x' comment='bay12: searched_location_x'/>
        <stl-vector type-name='int32_t' name='searched_y' comment='bay12: searched_location_y'/>
        <stl-vector type-name='int32_t' name='searched_z' comment='bay12: searched_location_z'/>
        <stl-vector type-name='int32_t' name='searched_timeout'  comment='bay12: searched_location_timer'/>

        <int32_t name='total_move'/>
        <int32_t name='start_skill_total'/>
        <int8_t name='need_start_skill_total'/>

        <stl-vector name='sleep_permission_stid' type-name='int32_t' ref-target='world_site'/>
        <stl-vector name='sleep_permission_srbid' type-name='int32_t'/>
        <stl-vector name='sleep_permission_timer' type-name='int32_t'/>

        <int32_t name='player_army_id' ref-target='army' comment='bay12: your_army_id'/>

        <int32_t name='gait_index' comment='bay12: speed_sel_y; Set when the gait menu is opened; keeps track of the last gait selected, but does not itself determine the gait used by the player unit.'/>
        <bool name='speed_sneak_options' comment='Set to 1 when the gait menu is opened. Setting it to 0 causes the stealth information to disappear from the menu.'/>

        <static-array name='tracks_x' type-name='int32_t' count='1000' comment='bay12: latest_tract_abs_x; X coordinates of spoors encountered by the player. The coordinate system used counts local tiles from the upper left most tile of the world map, so df.global.world.map.region_x*48 is added to the local x coordinate.'/>
        <static-array name='tracks_y' type-name='int32_t' count='1000' comment='bay12: latest_tract_abs_y; Y coordinates of spoors encountered by the player. The coordinate system used counts local tiles from the upper left most tile of the world map, so df.global.world.map.region_y*48 is added to the local y coordinate.'/>
        <static-array name='tracks_z' type-name='int32_t' count='1000' comment='bay12: latest_tract_abs_z; Z coordinates of spoors encountered by the player. The local z coordinate is corrected by adding df.global.world.map.region_z to it.'/>
        <int32_t name='tracks_next_idx' comment='bay12: latest_track_pos; Index of the next entry in tracks_x, tracks_y, tracks_z'/>
        <bitfield name='tracks_flags' base-type='uint32_t'> bay12: TRACKING_FLAG_*
            <flag-bit name='display_latest'/>
            <flag-bit name='display_travel'/>
            <flag-bit name='display_odor'/>
        </bitfield>
        <int32_t name='tracks_visible' comment='bay12: lit_latest_track_count; The quantity of spoors currently visible to the player.'/>

        <static-array name='travel_exemplar_x' type-name='int16_t' count='9'/>
        <static-array name='travel_exemplar_y' type-name='int16_t' count='9'/>
        <static-array name='travel_exemplar_z' type-name='int16_t' count='9'/>
        <static-array count='9' name='exemplar_track_data'> bay12: bse_spoor_datast
            <bitfield name='flag' type-name='spoor_flag'/>
            <enum name='type' type-name='spoor_type'/>
            <int32_t name='id1'/>
            <int32_t name='id2'/>
            <int32_t name='id3'/>
        </static-array>

        <static-array name='travel_exemplar_valid' type-name='uint8_t' count='9'/>
        <static-array name='travel_exemplar_tile' type-name='uint8_t' count='9'/>
        <static-array name='travel_exemplar_num' type-name='int32_t' count='9'/>
        <static-array name='travel_exemplar_dir' type-name='uint8_t' count='9'/>

        <int32_t name='odor_race' ref-target='creature_raw' comment='bay12: latest_smell_race; race ID of strongest odor creature'/>
        <int32_t name='odor_caste' ref-target='caste_raw' aux-value='$$.odor_race' comment='bay12: latest_smell_caste; caste ID of strongest odor creature'/>
        <bool name='odor_death' comment='bay12: latest_smell_death; Overrides creature odor with odor of Death'/>

        <int32_t name='travel_odor_race' ref-target='creature_raw' comment='bay12: travel_smell_race; race ID of strongest odor creature in fast travel mode'/>
        <int32_t name='travel_odor_caste' ref-target='caste_raw' aux-value='$$.travel_odor_race' comment='bay12: travel_smell_caste; caste ID of strongest odor creature in fast travel mode'/>
        <bool name='travel_odor_death'/>

        <bitfield name='flags' base-type='uint32_t'> bay12: ADVENTURE_FLAG_*
            <flag-bit name='building_action_list'/>
        </bitfield>

        <compound name='rumor_info'> bay12: adventure_rumor_infost
            <stl-vector name='base_data' pointer-type='adventure_rumor_datast' since='v0.44.10'/>
            <static-array name='data' count='34' index-enum='entity_event_type'>
                <stl-vector pointer-type='adventure_rumor_datast'/>
            </static-array>
        </compound>

        <bool name='tactical_mode'/>

        <compound name='construction'> bay12: adventure_constructionst
            <int16_t name='min_x'/>
            <int16_t name='max_x'/>
            <int16_t name='min_y'/>
            <int16_t name='max_y'/>
            <compound name='start' type-name='coord'/>

            <pointer name='site' type-name='world_site'/>
            <int32_t name='building_type'/>
            <int32_t name='building_subtype'/>
            <int32_t name='building_subcat1'/>
            <int32_t name='building_subcat2'/>
            <uint32_t name='building_jobitemflag'/>

            <int32_t name='selected_build_phase'/>

            <enum type-name='adventure_construction_mode_type' name='mode'/>
            <enum type-name='adventure_construction_mode_type' name='material_modemode'/>
            <bool name='removing_planned'/>
            <bool name='removing_existing'/>

            <bool name='choosing_workshop'/>

            <stl-vector name='civzone' pointer-type='building_civzonest'/>
            <int32_t name='selected_civzone'/>
            <static-array name='edit_zone_flag' count='144'>
                <static-array count='144'>
                    <bitfield base-type='uint8_t'> bay12: AC_EDIT_ZONE_FLAG_*
                        <flag-bit name='in_zone'/>
                        <flag-bit name='current_flow'/>
                        <flag-bit name='flow_block'/>
                    </bitfield>
                </static-array>
            </static-array>
            <bool name='doing_zone_flow'/>
            <bool name='removing_zone'/>
            <compound name='zone' type-name='coord'/>

            <pointer name='editing_zone' type-name='building_civzonest'/>
            <stl-vector name='zone_assign_hf' pointer-type='historical_figure'/>
            <int32_t name='selected_zone_assign'/>

            <stl-vector name='valid_ab' pointer-type='abstract_building'/>
            <int32_t name='selected_ab'/>

            <stl-vector name='valid_religious_practice' type-name='religious_practice_type'/>
            <stl-vector name='valid_religious_practice_id' type-name='religious_practice_data'/>
            <int32_t name='selected_religious_practice'/>
            <bool name='choosing_location_type'/>
            <bool name='choosing_temple_religious_practice'/>
            <bool name='choosing_craft_guild'/>

            <stl-vector name='valid_craft_guild_type' type-name='profession'/>
            <int32_t name='selected_craft_guild'/>

            <stl-vector name='material' type-name='int16_t'/>
            <stl-vector name='matgloss' type-name='int32_t'/>
            <stl-vector name='mat_jobitemflag' type-name='uint32_t'/>
            <stl-vector name='material_count' type-name='int32_t'/>
            <stl-vector name='material_master' type-name='int16_t'/>
            <stl-vector name='matgloss_master' type-name='int32_t'/>
            <stl-vector name='mat_jobitemflag_master' type-name='uint32_t'/>
            <stl-vector name='material_count_master' type-name='int32_t'/>
            <int32_t name='material_select'/>
            <stl-string name='material_filter'/>
            <int8_t name='material_doing_filter'/>

            <bool name='doing_start_menu'/>
            <bool name='start_menu_you_will_work'/>
            <stl-vector name='start_menu_worker' pointer-type='unit'/>
            <stl-bit-vector name='start_menu_can_work'/>
            <stl-bit-vector name='start_menu_will_work'/>
            <int32_t name='start_menu_selected_worker'/>

            <stl-vector name='start_menu_used_mat_item' type-name='int32_t'/>
            <stl-vector name='start_menu_used_mat_item_st' type-name='int32_t'/>
            <stl-vector name='start_menu_used_mat_item_tool_use' type-name='int32_t'/>
            <stl-vector name='start_menu_used_material' type-name='int16_t'/>
            <stl-vector name='start_menu_used_matgloss' type-name='int32_t'/>
            <stl-vector name='start_menu_used_mat_job_item_flag' type-name='uint32_t'/>
            <stl-vector name='start_menu_used_mat_state' type-name='matter_state'/>
            <stl-vector name='start_menu_used_mat_count' type-name='int32_t'/>
            <stl-vector name='start_menu_have_mat_count' type-name='int32_t'/>
            <int32_t name='start_menu_selected_mat'/>

            <int32_t name='start_menu_total_hours'/>
            <int32_t name='start_menu_you_hours'/>
            <int32_t name='start_menu_you_max_hours'/>
        </compound>

        <int32_t name='wait_timer' comment='bay12: dungeon_waiting; A_WAIT sets this to 10. It subsequently decreases by 1 every advmode tick, preventing the player from controlling their adventurer (by setting player_control_state) until it reaches 0.'/>

        <bitfield name='attack_style' base-type='uint32_t'> bay12: AIM_ATTACK_FLAG_*
            <flag-bit name='charge'/>
            <flag-bit name='multi'/>
            <flag-bit name='quick'/>
            <flag-bit name='heavy'/>
            <flag-bit name='wild'/>
            <flag-bit name='precise'/>
            <flag-bit name='automatic_hit'/>
            <flag-bit name='sparring_hit'/>
        </bitfield>
        <enum name='charge_forbidden' base-type='int32_t'> bay12: ChargeRestrictType
          <enum-item name='None' value='-1'/>
          <enum-item name='NoTarget'/>
          <enum-item name='SelfProne'/>
          <enum-item name='SelfMounted'/>
          <enum-item name='SelfChained'/>
          <enum-item name='SelfUncontrolledFlight'/>
          <enum-item name='SelfVehicle'/>
          <enum-item name='SelfProjectile'/>
          <enum-item name='SelfClimbing'/>
          <enum-item name='TargetProne'/>
          <enum-item name='TargetMounted'/>
          <enum-item name='TargetChained'/>
          <enum-item name='TargetUncontrolledFlight'/>
          <enum-item name='TargetVehicle'/>
          <enum-item name='TargetProjectile'/>
          <enum-item name='TargetClimbing'/>
          <enum-item name='TargetSharesLocation'/>
          <enum-item name='TargetLocationInaccessible'/>
        </enum>
        <bool name='no_move_choices'/>

        <int32_t name='world_debug_pass_time'/>
        <int32_t name='world_debug_loaded_center_abs_smm_x'/>?
        <int32_t name='world_debug_loaded_center_abs_smm_y'/>?
        <stl-vector name='world_debug_army' pointer-type='army'/>
        <int32_t name='world_debug_army_scroll'/>?
        <bool name='world_debug_viewing_army_details'/>

        <int16_t name='long_action_duration' comment='bay12: travel_goal_count; Set at the beginning of a long action which unloads the map, such as sleeping, making the first fast travel move, composing, etc. For sleeping, it is set to 800*(hours of sleep). For making the first fast travel move, seems to always be set to 17. 3200 for composing poetry. Resets to 0 after 10 frames.'/>
        <int16_t name='travel_start_x' comment='bay12: travel_goal_abs_smm_x'/>
        <int16_t name='travel_start_y' comment='bay12: travel_goal_abs_smm_y'/>  Coordinates of the player on the map right after their first fast travel move
        <int16_t name='travel_start_z' comment='bay12: travel_goal_layer_depth'/>
        <int32_t name='player_id' ref-target='nemesis_record' comment='bay12: your_nem_index'/>

        <compound name='viewing_spoor' type-name='coord'/>
        <pointer name='viewing_spoor_bse' type-name='block_square_event_spoorst'/>

        <compound name='conversation'> not a compound
            <stl-vector name='activity' pointer-type='activity_entry' comment='bay12: conv_act_list'/>
            <stl-vector name='activity_event' pointer-type='activity_event' comment='bay12: conv_actev_list'/>
            <int32_t name='cursor_activity' refers-to='$$._parent.activity[$]' comment='bay12: conv_sel'/>
            <int32_t name='cursor_choice' refers-to='$$._parent.choices[$]' comment='bay12: choice_sel'/>
            <int32_t name='current_page'  comment='bay12: conv_choice_page_index'/>
            <stl-vector name='page_top_choices' type-name='int32_t' comment='bay12: conv_choice_page_top'/>
            <stl-vector name='page_bottom_choices' type-name='int32_t' comment='bay12: conv_choicE_page_bottom'/>
            <stl-vector name='choices' comment='bay12: conv_choice info'>
                <pointer> bay12: adventure_conversation_choice_infost
                    <pointer name="choice" type-name='talk_choice' comment='bay12: cc'/>
                    <stl-vector name="keywords" pointer-type='stl-string' comment='bay12: key_word'/>
                    <compound name="title" type-name='curses_text_boxst'/>
                    <int32_t name="orig_index" comment='bay12: basic_value'/>
                    <int32_t name="ranking" comment='bay12: value'/>
                </pointer>
            </stl-vector>
            <stl-string name='filter' comment='bay12: conv_string_filter'/>
            <enum name='conv_tact' type-name='conversation_tact_type' since='v0.47.01'/>

            <stl-vector name='targets' comment='bay12: talk_list'>
                <pointer> bay12: talk_list_optionst
                    <int32_t name="unit_id" ref-target='unit'/>
                    <int32_t name="histfig_id" ref-target='historical_figure' comment='bay12: hfid'/>
                    <enum base-type='int32_t' name='type'> bay12: TalkCircumstanceType
                        <enum-item name='NONE' value='-1'/>
                        <enum-item name='Normal'/>
                        <enum-item name='AssumeIdentity'/>
                        <enum-item name='SleepPermission'/>
                        <enum-item name='Shouting'/>
                        <enum-item name='StartPerformance'/>
                    </enum>
                </pointer>
            </stl-vector>
            <int32_t name='cursor_target' refers-to='$$._parent.targets[$]' comment='bay12: talk_sel'/>
        </compound>

        <stl-vector name='projectile_target_list'>
            <pointer> bay12: projectile_target_list_optionst
                <int32_t name="unit_id" ref-target='unit'/>
                <int32_t name="histfig_id" ref-target='historical_figure' comment='bay12: hfid'/>
            </pointer>
        </stl-vector>
        <int32_t name='projectile_target_sel'/>

        <compound name='custom_combat'> bay12: adventure_custom_combatst
            <stl-vector name='aim_mod' pointer-type='attack_chance_modifierst'/>
        </compound>

        <stl-vector name='interacts' pointer-type='adventure_item_interact_choicest'/>
        <stl-vector name='commands' pointer-type='adventure_optionst'/>
        <stl-vector name='movements' pointer-type='adventure_movement_optionst'/>
        <stl-vector name='movement_item_interact' pointer-type='adventure_movement_optionst'/>

        <int32_t name='sleep_hours'/>
        <bool name='sleep_until_dawn'/>
        <bool name='started_sleep_at_dawn'/>
        <bool name='sleep_sleep'/>
        <bool name='sleeping_indoors'/>
        <bool name='sleeping_underground'/>
        <int8_t name='player_control_state' comment='Set to 2 when adventurer is unconscious, etc to prevent player from controlling the unit'/>
        <int8_t name='item_projectiles_state' comment='Observed to be set to 1 when an item is thrown or fired, or a limb is sent flying after being severed off. Over a number of frames (dependent on the distance travelled by the projectile) this eventually changes to 2 and then finally back to 0 (a number of frames after the projectile has reached its final destination). Sometimes (seemingly when the distance travelled is long) it changes from 1 to 2 and back to 1 immediately midway into this process. The player_control_state is set to 2 until this is complete. Forcing a constant item_projectiles_state of 0 causes item projectiles to hang in the air.'/>
        <int32_t name='old_target_page'/>

        <compound name='companions'> not a compound
            <stl-vector name='unit' pointer-type='unit'/>
            <stl-bit-vector name='unit_visible'/>
            <compound name='unit_position' type-name='coord_path'/>

            <stl-vector name='companion_party_nem' pointer-type='nemesis_record'/>
        </compound>

        <int32_t name='become_companion_page'/>
        <int32_t name='companion_tactical_page'/>

        <compound name='interactions'> not a compound
            <stl-vector name='party_core_members' type-name='int32_t' ref-target='historical_figure' since='v0.47.01' comment='Contains IDs of the non-pet historical figures that the player party started off with. Figures in this list are eligible for control via tactical mode.'/>
            <stl-vector name='party_pets' type-name='int32_t' ref-target='historical_figure' since='v0.47.01' comment='Contains historical figure IDs of pets owned by the party, both those that the player started off with as well as others claimed later on.'/>
            <stl-vector name='party_extra_members' type-name='int32_t' ref-target='historical_figure' comment='Contains IDs of non-pet historical figures who joined the player party later on.'/>

            <stl-vector name='it_list' pointer-type='interaction_target_instance_listst'/>

            <stl-vector name='it_list_target_choice' pointer-type='general_ref' since='v0.47.01'/>
            <pointer name='current_interaction_info_ptr' type-name='creature_interaction'/>
            <int32_t name='selected_ability' init-value='-1' comment='natural ability'/>
            <int32_t name='selected_power' init-value='-1' comment='acquired power'/>
            <pointer name='current_it_list_itt' type-name='interaction_target'/>
            <int32_t name='max_target_number' init-value='-1'/>
            <int32_t name='target_range'/>
            <bitfield name='target_flags' type-name='creature_interaction_target_flags'/>
            <pointer name='current_it_list_itil' type-name='interaction_target_instance_listst'/>
        </compound>

        <stl-string name='pickup_amount_str'/>
        <int32_t name="pickup_amount_max"/>
        <int32_t name="pickup_amount_i"/>

        <compound name='special_combat'> bay12: special_combatst
            <stl-vector name='parry_wld' pointer-type='item'/>
            <stl-vector name='parry_move' pointer-type='unit_action'/>
            <stl-vector name='block_wld' pointer-type='item'/>
            <stl-vector name='block_move' pointer-type='unit_action'/>
            <bool name='can_jump_dodge'/>
            <compound name='jumpsquare' type-name='coord2d_path'/>
        </compound>

        <compound name='reaction_moment'> bay12: reaction_moment_interfacest
            <int32_t name='no_attacker_page'/>
            <stl-vector name='no_attacker_move' pointer-type='unit_action'/>
            <int32_t name='player_unit_projectile_x'/>
            <int32_t name='player_unit_projectile_y'/>
            <int32_t name='player_unit_projectile_z' comment='Corrected Z-coordinate of the player when travelling as a unit projectile after falling or jumping. This value is obtained by adding df.global.world.map.region_z to the local z coordinate.'/>
        </compound>

        <compound name='sound_indicator'> bay12: sound_indicator_handlerst
            <static-array count='100' name='indicators'>
                <enum name='type' base-type='int32_t'> bay12: SoundIndicatorType
                    <enum-item name='NONE' value='-1'/>
                    <enum-item name='MOVEMENT'/>
                    <enum-item name='COMBAT'/>
                    <enum-item name='VOCALIZATION'/>
                    <enum-item name='GRINDING_MECHANISM'/>
                    <enum-item name='STORYTELLING'/>
                    <enum-item name='POEM_RECITATION'/>
                    <enum-item name='MUSICAL_VOICE'/>
                    <enum-item name='DANCING'/>
                    <enum-item name='PREACHING'/>
                </enum>
                <compound name='true_loc' type-name='coord'/>
                <compound name='disp_loc' type-name='coord'/>
                <int16_t name='size'/>
                <int32_t name='timer'/>
                <bitfield name='flags' base-type='uint32_t'> bay12: SOUND_INDICATOR_FLAG_*
                    <flag-bit name='adv_heard'/>
                    <flag-bit name='adv_visible'/>
                </bitfield>
            </static-array>
            <int32_t name='place_sound_num'/>
        </compound>

        <compound name='attack_menu'> bay12: attack_menust
            <stl-vector name='move_choice'>
                <enum base-type='int32_t'> bay12: AttackMoveChoiceType
                    <enum-item name='NONE' value='-1'/>
                    <enum-item name='STRIKE'/>
                    <enum-item name='WRESTLE'/>
                    <enum-item name='PARRY'/>
                    <enum-item name='BLOCK'/>
                    <enum-item name='DODGE_AWAY'/>
                </enum>
            </stl-vector>
            <stl-vector name='choice_unit' pointer-type='unit'/>
            <stl-vector name='choice_move_list' pointer-type='unit_action'/>
            <int32_t name='choice_current_index'/>
            <stl-vector name='last_choice_index' type-name='int32_t'/>
            <stl-vector name='target_move_list' pointer-type='unit_action'/>
        </compound>

        <compound name='performance_menu'> bay12: performance_menust
            <enum name='mode' base-type='int32_t'> bay12: PerformanceMenuModeType
                <enum-item name='NONE' value='-1'/>
                <enum-item name='START'/>
                <enum-item name='STORY_TYPES'/>
                <enum-item name='STORY_SITES'/>
                <enum-item name='STORY_PEOPLE'/>
                <enum-item name='STORY_ENTITIES'/>
                <enum-item name='STORY_SUBREGIONS'/>
                <enum-item name='STORY_EVENTS'/>
                <enum-item name='POETRY_FORMS_PIECES'/>
                <enum-item name='MUSIC_FORMS_PIECES'/>
                <enum-item name='MUSIC_ROLES'/>
                <enum-item name='DANCE_FORMS_PIECES'/>
                <enum-item name='SERMON_TYPE'/>
                <enum-item name='SERMON_HFID'/>
                <enum-item name='SERMON_SPHERE'/>
                <enum-item name='SERMON_PROMOTE_VALUE'/>
                <enum-item name='SERMON_REFUSE_VALUE'/>
            </enum>
            <stl-vector name='base_choice' pointer-type='performance_menu_choicest'/>
            <stl-vector name='choice' pointer-type='performance_menu_choicest'/>
            <stl-string name='filter_str'/>
            <bool name='entering_filter'/>
            <int32_t name='selected'/>
            <enum name='relevant_choice' type-name='performance_menu_choice_type'/>
            <compound name='color_box' type-name='color_text_boxst'/>
            <int32_t name='text_scroll'/>
        </compound>

        <compound name='assume_identity' comment='Manages the Assume Identity UI when the AssumeIdentity menu is open'> bay12: assume_identity_menust
            <enum name='mode' type-name='assume_identity_mode'/>
            <compound name='name' type-name='language_name'/>
            <int32_t name='worship_object' ref-target='historical_figure'/>
            <enum name='profession' type-name='profession'/>
            <int32_t name='origin' ref-target='historical_entity'/>
            <stl-vector pointer-type='assume_identity_menu_choicest' name='base_choice'/>
            <stl-vector pointer-type='assume_identity_menu_choicest' name='choice'/>
            <stl-string name='filter'/>
            <bool name='entering_filter'/>
            <int32_t name='selected'/>
        </compound>

        <int16_t name='move_direction_x' comment='x-axis direction for the last attempted player unit movement: -1 = west, 0 = none, 1 = east'/>
        <int16_t name='move_direction_y' comment='y-axis direction for the last attempted player unit movement: -1 = north, 0 = none, 1 = south'/>
        <int16_t name='move_direction_z' comment='z-axis direction for the last attempted player unit movement: -1 = down, 0 = none, 1 = up'/>

        <bool name='move_do_mid_move'/>
        <bool name='move_carefully' comment='Is set when the player prepares to move carefully (via the Alt + movement key combo)'/>
        <int16_t name='careful_direction_x' comment='x-axis direction for the last attempted careful player unit movement: -1 = west, 0 = none, 1 = east'/>
        <int16_t name='careful_direction_y' comment='y-axis direction for the last attempted careful player unit movement: -1 = north, 0 = none, 1 = south'/>
        <stl-string name='interrupt_performance_warning' comment='the message displayed when the player attempts to move while their unit is performing'/>

        <pointer name='name_item_ptr' type-name='item'/>
        <compound type-name='language_name' name='name_item' comment='used when naming items'/>

        <pointer name='speed_sneak_un' type-name='unit'/>
    </struct-type>

    <enum-type type-name='performance_menu_choice_type' base-type='int32_t'> bay12: PerformanceMenuChoiceType
        <enum-item name='NONE' value='-1'/>
        <enum-item name='TELL_STORY'/>
        <enum-item name='RECITE_POEM'/>
        <enum-item name='PERFORM_MUSIC'/>
        <enum-item name='DANCE'/>
        <enum-item name='STORY_SITES'/>
        <enum-item name='STORY_PEOPLE'/>
        <enum-item name='STORY_ENTITIES'/>
        <enum-item name='STORY_SUBREGIONS'/>
        <enum-item name='STORY_SITE'/>
        <enum-item name='STORY_HF'/>
        <enum-item name='STORY_ENTITY'/>
        <enum-item name='STORY_SUBREGION'/>
        <enum-item name='STORY_EVENT'/>
        <enum-item name='POETRY_FORM'/>
        <enum-item name='POETRY_COMPOSITION'/>
        <enum-item name='MUSIC_FORM'/>
        <enum-item name='MUSIC_COMPOSITION'/>
        <enum-item name='MUSIC_ROLE'/>
        <enum-item name='DANCE_FORM'/>
        <enum-item name='DANCE_COMPOSITION'/>
        <enum-item name='GIVE_SERMON'/>
        <enum-item name='SERMON_HFIDS'/>
        <enum-item name='SERMON_SPHERES'/>
        <enum-item name='SERMON_PROMOTE_VALUES'/>
        <enum-item name='SERMON_REFUSE_VALUES'/>
        <enum-item name='SERMON_HFID'/>
        <enum-item name='SERMON_SPHERE'/>
        <enum-item name='SERMON_PROMOTE_VALUE'/>
        <enum-item name='SERMON_REFUSE_VALUE'/>
    </enum-type>

    <struct-type type-name='performance_menu_choicest'>
        <enum name='type' type-name='performance_menu_choice_type'/>
        <stl-string name='print_name'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_filter_name'/>
        <int32_t name='id'/>
        <pointer name='iden' type-name='identity'/>
    </struct-type>

    <struct-type type-name='assume_identity_menu_choicest'>
        <stl-string name='print_name'/>
        <stl-string name='list_name'/>
        <stl-string name='simple_filter_name'/>
        <pointer name='iden' type-name='identity'/>
        <pointer name='worship_hf' type-name='historical_figure'/>
        <enum name='prof' type-name='profession'/>
        <pointer name='entity' type-name='historical_entity'/>
    </struct-type>

    <class-type type-name='adventure_optionst'>
        <virtual-methods>
            <vmethod name='getDescription'><pointer type-name='stl-string'/></vmethod>
            <vmethod is-destructor='true'/>
            <vmethod name='getIngestedItem'><ret-type><pointer type-name='item'/></ret-type></vmethod>
            <vmethod name='performAction'>
                <comment>
                    for "pick up vermin":

                    the first argument is set to the vermin index if an item was allocated and this was the last vermin of its type
                    the second argument is set to true if an item was allocated, false otherwise
                    the third argument is set to true if the second argument is false
                    the first and third arguments are not changed in all other cases
                    returns an item_verminst pointer

                    for all other types (as of 0.47.04):

                    does not modify arguments 1 and 2
                    argument 3 is set to true if a fire was started
                    returns nullptr
                </comment>
                <pointer name='kilvev' type-name='int32_t'/>
                <pointer name='blast' type-name='bool'/>
                <pointer name='ret_positive' type-name='bool'/>
                <ret-type><pointer type-name='item'/></ret-type>
            </vmethod>

            <vmethod ret-type='int16_t' name='getPlayerPosX'/>
            <vmethod ret-type='int16_t' name='getPlayerPosY'/>
            <vmethod ret-type='int16_t' name='getPlayerPosZ'/>

            <vmethod ret-type='int16_t' name='getTargetPosX'/>
            <vmethod ret-type='int16_t' name='getTargetPosY'/>
            <vmethod ret-type='int16_t' name='getTargetPosZ'/>

            <vmethod name='deleteSpatter'/>
            <vmethod name='getSuckBloodUnitID'><ret-type><int32_t ref-target='unit'/></ret-type></vmethod>
            <vmethod name='isIngestFromContainer' ret-type='bool'/>
            <vmethod name='getBuildingContainer'><ret-type><pointer type-name='building'/></ret-type></vmethod>
            <vmethod name='getItemContainer'><ret-type><pointer type-name='item'/></ret-type></vmethod>
            <vmethod name='getUnitContainer'><ret-type><pointer type-name='unit'/></ret-type></vmethod>
        </virtual-methods>
    </class-type>

    <class-type type-name='adventure_option_eat_unit_contaminantst' inherits-from='adventure_optionst'>
        <pointer name='unit' type-name='unit'/>
        <pointer name='spatter' type-name='unit_spatter'/>
    </class-type>

    <class-type type-name='adventure_option_eat_item_contaminantst' inherits-from='adventure_optionst'>
        <pointer name='unit' type-name='unit'/>
        <pointer name='inv_item' type-name='unit_inventory_item'/>
        <pointer name='spatter' type-name='spatter'/>
    </class-type>

    <class-type type-name='adventure_option_view_contaminantst' inherits-from='adventure_optionst'>
        <pointer name='unit' type-name='unit'/>
        <pointer name='spatter' type-name='unit_spatter'/>
    </class-type>

    <class-type type-name='adventure_environment_optionst' inherits-from='adventure_optionst'>
        <compound name='target_pos' type-name='coord'/>
        <compound name='player_pos' type-name='coord'/>
    </class-type>

    <class-type type-name='adventure_environment_unit_suck_bloodst' inherits-from='adventure_environment_optionst'>
        <int32_t name='unit_id' ref-target='unit'/>
    </class-type>

    <class-type type-name='adventure_environment_ingest_from_containerst' inherits-from='adventure_environment_optionst'>
        <pointer type-name='item' name='container'/>
        <pointer type-name='item' name='food'/>
    </class-type>

    <class-type type-name='adventure_environment_place_on_pack_animalst' inherits-from='adventure_environment_optionst'>
        <pointer name='pack_animal' type-name='unit'/>
    </class-type>

    <class-type type-name='adventure_environment_place_in_bld_containerst' inherits-from='adventure_environment_optionst'>
        <pointer name='building' type-name='building'/>
    </class-type>

    <class-type type-name='adventure_environment_place_in_it_containerst' inherits-from='adventure_environment_optionst'>
        <pointer type-name='item' name='container'/>
    </class-type>

    <class-type type-name='adventure_environment_ingest_materialst' inherits-from='adventure_environment_optionst'>
        <int16_t name='mat_type'/>
        <int32_t name='mat_index'/>
        <enum name='mat_state' type-name='matter_state'/>
    </class-type>

    <class-type type-name='adventure_environment_pickup_vermin_eventst' inherits-from='adventure_environment_optionst'>
        <int32_t name='vermin_idx'/>
    </class-type>

    <class-type type-name='adventure_environment_pickup_ignite_vegst' inherits-from='adventure_environment_optionst'>
        <int32_t name='plant_idx'/>
    </class-type>

    <class-type type-name='adventure_environment_pickup_make_campfirest' inherits-from='adventure_environment_optionst'/>

    <class-type type-name='adventure_environment_pickup_chop_treest' inherits-from='adventure_environment_optionst'/>


    <class-type type-name='adventure_movement_optionst'>
        <compound name='dest' type-name='coord'/>
        <compound name='source' type-name='coord'/>
        <virtual-methods>
            <vmethod name='get_name'><pointer name='str' type-name='stl-string'/></vmethod>
            <vmethod name='realize'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='adventure_movement_attack_creaturest' inherits-from='adventure_movement_optionst'>
        <stl-vector name='targets' type-name='int32_t' ref-target='unit'/>
    </class-type>

    <class-type type-name='adventure_movement_building_interactst' inherits-from='adventure_movement_optionst'>
        <int32_t name='building_id' ref-target='building'/>
    </class-type>

    <class-type type-name='adventure_movement_item_interactst' inherits-from='adventure_movement_optionst'>
        <int32_t name='item_id' ref-target='item'/>
    </class-type>

    <class-type type-name='adventure_movement_item_interact_ridest' inherits-from='adventure_movement_item_interactst'/>
    <class-type type-name='adventure_movement_item_interact_pushst' inherits-from='adventure_movement_item_interactst'/>
    <class-type type-name='adventure_movement_item_interact_guidest' inherits-from='adventure_movement_item_interactst'/>

    <class-type type-name='adventure_movement_movest' inherits-from='adventure_movement_optionst'>
        <bitfield type-name='pathfinding_flags' name='override_permit'/>
        <int32_t name='aim_attack_flag'/>
    </class-type>

    <class-type type-name='adventure_movement_hold_tilest' inherits-from='adventure_movement_optionst'>
        <compound name='grab' type-name='coord'/>
    </class-type>

    <class-type type-name='adventure_movement_release_hold_tilest' inherits-from='adventure_movement_optionst'/>

    <class-type type-name='adventure_movement_hold_itemst' inherits-from='adventure_movement_optionst'>
        <int32_t name='item_id' ref-target='item'/>
    </class-type>

    <class-type type-name='adventure_movement_release_hold_itemst' inherits-from='adventure_movement_optionst'/>

    <class-type type-name='adventure_movement_claim_petst' inherits-from='adventure_movement_optionst'>
        <pointer name='animal' type-name='unit'/>
    </class-type>

    <class-type type-name='adventure_movement_lead_animalst' inherits-from='adventure_movement_optionst'>
        <pointer name='animal' type-name='unit'/>
    </class-type>

    <class-type type-name='adventure_movement_stop_lead_animalst' inherits-from='adventure_movement_optionst'>
        <pointer name='animal' type-name='unit'/>
    </class-type>

    <class-type type-name='adventure_movement_mountst' inherits-from='adventure_movement_optionst'>
        <pointer name='animal' type-name='unit'/>
        <int16_t name='riderposition'/>
    </class-type>
    <class-type type-name='adventure_movement_dismountst' inherits-from='adventure_movement_optionst'/>

    <class-type type-name='adventure_movement_climbst' inherits-from='adventure_movement_optionst'>
        <compound name='grab' type-name='coord'/>
    </class-type>

    <class-type type-name='adventure_item_interact_choicest'>
        <virtual-methods>
            <vmethod name='getDescription'><pointer type-name='stl-string'/></vmethod>
            <vmethod name='performAction'/>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='adventure_item_interact_strugglest' inherits-from='adventure_item_interact_choicest'/>

    <class-type type-name='adventure_item_interact_pull_outst' inherits-from='adventure_item_interact_choicest'/>

    <class-type type-name='adventure_item_interact_give_namest' inherits-from='adventure_item_interact_choicest'>
        <pointer name='item' type-name='item'/>
    </class-type>

    <class-type type-name='adventure_item_interact_heat_from_tilest' inherits-from='adventure_item_interact_choicest'>
        <pointer name='item' type-name='item'/>
        <compound name='pos1' type-name='coord'/>
        <compound name='pos2' type-name='coord'/>
    </class-type>

    <class-type type-name='adventure_item_interact_fill_with_materialst' inherits-from='adventure_item_interact_choicest'>
        <pointer name='container' type-name='item'/>
        <compound name='pos1' type-name='coord'/>
        <compound name='pos2' type-name='coord'/>
        <int16_t name='material'/>
        <int32_t name='matgloss'/>
        <enum name='state' type-name='matter_state'/>
    </class-type>

    <class-type type-name='adventure_item_interact_fill_from_containerst' inherits-from='adventure_item_interact_choicest'>
        <pointer name='container' type-name='item'/>
        <pointer name='take_from' type-name='item'/>
        <compound name='pos1' type-name='coord'/>
        <compound name='pos2' type-name='coord'/>
    </class-type>

    <class-type type-name='adventure_item_interact_readst' inherits-from='adventure_item_interact_choicest'/>

    <class-type type-name='adventure_item_interact_rollst' inherits-from='adventure_item_interact_choicest'/>

    <class-type type-name='adventure_item_interact_roll_allst' inherits-from='adventure_item_interact_choicest'/>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
