name: Generate symbols

on:
  workflow_dispatch:
    inputs:
      dfhack_ref:
        description: DFHack branch for ref update
        required: true
        default: develop
      version:
        description: DF version
        required: true
      platform:
        description: Target OS platform
        type: choice
        required: true
        default: all
        options:
        - all
        - windows
        - linux
      channel:
        description: DF distribution channel
        type: choice
        required: true
        default: steam
        options:
        - all
        - steam
        - itch
        - classic
      steam_branch:
        description: DF Steam branch
        required: true
        default: testing

jobs:
  package:
    uses: DFHack/dfhack/.github/workflows/build-linux.yml@develop
    with:
      dfhack_ref: ${{ github.event.inputs.dfhack_ref }}
      artifact-name: dfhack-symbols-linux64-build
      append-date-and-hash: false
      cache-id: release
      cache-readonly: true
    secrets: inherit

  generate-linux:
    name: Generate linux64 symbols
    runs-on: ubuntu-latest
    needs:
    - package
    steps:
    - name: Clone structures
      uses: actions/checkout@v4
      with:
        path: xml
    - name: Setup steamcmd
      id: steamcmd
      uses: CyberAndrii/setup-steamcmd@v1
    - name: Download DF Linux
      env:
        STEAM_USERNAME: myk002
        STEAM_CONFIG_VDF: ${{ secrets.STEAM_CONFIG_VDF }}
      run: |
        mkdir -p $HOME/Steam/config
        echo "$STEAM_CONFIG_VDF" | base64 -d >$HOME/Steam/config/config.vdf
        ${{ steps.steamcmd.outputs.executable }} \
          +@ShutdownOnFailedCommand 1 \
          +force_install_dir $PWD/DF \
          +login $STEAM_USERNAME \
          +app_update 975370 validate \
          +quit
    - name: Download DFHack
      uses: actions/download-artifact@v4
      with:
        name: dfhack-symbols-linux64-build
    - name: Install DFHack
      shell: bash
      run: tar xjf dfhack-symbols-linux64-build.tar.bz2 -C DF
    - name: Start X server
      run: Xvfb :0 -screen 0 1600x1200x24 &
    - name: Generate symbols
      timeout-minutes: 10
      env:
        DISPLAY: :0
        TERM: xterm-256color
      run: xml/symbols_gen_linux.sh ${{ github.event.inputs.version }} ${{ github.event.inputs.channel }} DF
    - name: Commit symbol updates
      run: ls -al
    - name: Update structures ref
      run: du -sh *

  generate-windows:
    name: Generate win64 symbols
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: pip install 'pefile'
    - name: Clone structures
      uses: actions/checkout@v4
      with:
        path: xml
    - name: Clone df_misc
      uses: actions/checkout@v4
      with:
        repository: DFHack/df_misc
        path: df_misc
    - name: Clone metasm
      uses: actions/checkout@v4
      with:
        repository: jjyg/metasm
        path: metasm
    - name: Setup steamcmd
      id: steamcmd
      uses: CyberAndrii/setup-steamcmd@v1
    - name: Download DF Windows binaries
      env:
        STEAM_USERNAME: myk002
        STEAM_CONFIG_VDF: ${{ secrets.STEAM_CONFIG_VDF }}
      run: |
        mkdir -p $HOME/Steam/config
        echo "$STEAM_CONFIG_VDF" | base64 -d >$HOME/Steam/config/config.vdf
        ${{ steps.steamcmd.outputs.executable }} \
          +@ShutdownOnFailedCommand 1 \
          +@sSteamCmdForcePlatformType windows \
          +force_install_dir $PWD/DF \
          +login $STEAM_USERNAME \
          +app_update 975370 validate \
          +quit
    - name: Generate symbols
      run: |
        ls -al
        du -sh *
        xml/symbols_gen_windows.sh ${{ github.event.inputs.version }} ${{ github.event.inputs.channel }} DF
    - name: Update structures ref
      run: true
